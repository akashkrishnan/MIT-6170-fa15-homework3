<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <title>Register</title>
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto">
    <link rel="stylesheet" type="text/css" href="/global.css">
    <link rel="stylesheet" type="text/css" href="/layout.css">
    <link rel="stylesheet" type="text/css" href="/shadow.css">
    <link rel="stylesheet" type="text/css" href="/form.css">
    <link rel="stylesheet" type="text/css" href="/register.css">
  </head>

  <body fullbleed fit>

    <div masthead shadow elevation="1">
      <div name><strong><%= web.name %></strong></div>
    </div>

    <div content>
      <div layout-horizontal layout-center-justified>
        <div register form shadow elevation="1">

          <div header>Account Registration</div>

          <div text>Please complete the following form.</div>

          <div inputs layout-vertical>

            <div input layout-vertical>
              <label>Username</label>
              <input type="text" id="username"/>
            </div>

            <div input layout-vertical>
              <label>Password</label>
              <input type="password" id="password"/>
            </div>

            <div input layout-vertical>
              <label>Verify Password</label>
              <input type="password" id="password_verify"/>
            </div>

          </div>

          <div buttons layout-horizontal>
            <a button login flex href="/">Login</a>
            <a button register flex>Register</a>
          </div>

        </div>
      </div>
    </div>

    <script>

      (function () {

        var config;

        // Add keyup listener for enter/return inside of the form
        document.querySelector( '[form]' ).addEventListener( 'keyup', function ( e ) {

          // Check if Enter/Return
          if ( e.keyCode === 13 ) {

            // Validate the registration form
            validate();

          }

        }, false );

        document.querySelector( '[button][register]' ).addEventListener( 'click', function () {

          // Validate the registration form
          validate();

        }, false );

        var loadConfig = function ( done ) {

          var xhr = new XMLHttpRequest();

          xhr.onreadystatechange = function () {
            if ( xhr.readyState === 4 ) {
              try {
                config = JSON.parse( xhr.response );
                done();
              } catch ( e ) {
                console.error( 'Unable to retrieve configuration file.' );
                alert( 'Unable to retrieve configuration file.' );
              }
            }
          };

          xhr.open( 'GET', '/config.json', true );
          xhr.send();

        };

        var validate = function () {

          // Retrieve config if it hasn't already been loaded
          if ( !config ) {
            loadConfig( validate );
          } else {

            var username = document.querySelector( '#username' ).value;
            var password = document.querySelector( '#password' ).value;
            var password_verify = document.querySelector( '#password_verify' ).value;

            var usernameMinLength = config.registration.username.length.min;
            var usernameMaxLength = config.registration.username.length.max;
            var validUsername = new RegExp( config.registration.username.regex.valid ).test( username );

            var passwordMinLength = config.registration.password.length.min;
            var passwordMaxLength = config.registration.password.length.max;
            var hasNumeral = new RegExp( config.registration.password.regex.hasNumeral ).test( password );
            var hasUpper = new RegExp( config.registration.password.regex.hasUpper ).test( password );
            var hasLower = new RegExp( config.registration.password.regex.hasLower ).test( password );

            if ( username.length < usernameMinLength ) {
              alert( 'Username must contain at least ' + usernameMinLength + ' characters.' );
            } else if ( username.length > usernameMaxLength ) {
              alert( 'Username must contain at most ' + usernameMaxLength + ' characters.' );
            } else if ( !validUsername ) {
              alert( 'Username contains invalid characters. Please use alphanumeric characters and underscores.' );
            } else if ( password !== password_verify ) {
              alert( 'Passwords do not match.' );
            } else if ( username === password ) {
              alert( 'Username and password must be different.' );
            } else if ( password.length < passwordMinLength ) {
              alert( 'Password must contain at least ' + passwordMinLength + ' characters.' );
            } else if ( password.length > passwordMaxLength ) {
              alert( 'Password must contain at most ' + passwordMaxLength + ' characters.' );
            } else if ( !hasNumeral ) {
              alert( 'Password must contain at least one (1) Arabic numeral (0-9).' );
            } else if ( !hasUpper ) {
              alert( 'Password must contain at least one (1) uppercase English alphabet character (A-Z).' );
            } else if ( !hasLower ) {
              alert( 'Password must contain at least one (1) lowercase English alphabet character (a-z).' );
            } else {
              register( username, password );
            }

          }

        };

        var register = function ( username, password ) {

          var data = new FormData();
          data.append( 'username', username );
          data.append( 'password', password );

        };

      })();

    </script>

  </body>

</html>
